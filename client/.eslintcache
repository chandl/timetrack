[{"/Users/chandler/Documents/Projects/timetrack/client/src/index.js":"1","/Users/chandler/Documents/Projects/timetrack/client/src/reportWebVitals.js":"2","/Users/chandler/Documents/Projects/timetrack/client/src/App.js":"3","/Users/chandler/Documents/Projects/timetrack/client/src/components/AppHeader.js":"4","/Users/chandler/Documents/Projects/timetrack/client/src/pages/Home.js":"5","/Users/chandler/Documents/Projects/timetrack/client/src/pages/TimeManager.js":"6","/Users/chandler/Documents/Projects/timetrack/client/src/components/ErrorSnackbar.js":"7","/Users/chandler/Documents/Projects/timetrack/client/src/components/TimeEditor.js":"8","/Users/chandler/Documents/Projects/timetrack/client/src/components/ManagerComponent.js":"9","/Users/chandler/Documents/Projects/timetrack/client/src/pages/ReportManager.js":"10","/Users/chandler/Documents/Projects/timetrack/client/src/components/ReportCreator.js":"11"},{"size":515,"mtime":1609114857173,"results":"12","hashOfConfig":"13"},{"size":364,"mtime":1609114857322,"results":"14","hashOfConfig":"13"},{"size":913,"mtime":1609142904877,"results":"15","hashOfConfig":"13"},{"size":778,"mtime":1609114857082,"results":"16","hashOfConfig":"13"},{"size":173,"mtime":1609114857184,"results":"17","hashOfConfig":"13"},{"size":6415,"mtime":1609230116725,"results":"18","hashOfConfig":"13"},{"size":1343,"mtime":1609114857108,"results":"19","hashOfConfig":"13"},{"size":4409,"mtime":1609114857157,"results":"20","hashOfConfig":"13"},{"size":869,"mtime":1609230116427,"results":"21","hashOfConfig":"13"},{"size":6554,"mtime":1609230116639,"results":"22","hashOfConfig":"13"},{"size":4743,"mtime":1609230116493,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1pg95bi",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chandler/Documents/Projects/timetrack/client/src/index.js",[],["48","49"],"/Users/chandler/Documents/Projects/timetrack/client/src/reportWebVitals.js",[],"/Users/chandler/Documents/Projects/timetrack/client/src/App.js",[],"/Users/chandler/Documents/Projects/timetrack/client/src/components/AppHeader.js",[],"/Users/chandler/Documents/Projects/timetrack/client/src/pages/Home.js",[],"/Users/chandler/Documents/Projects/timetrack/client/src/pages/TimeManager.js",["50"],"/Users/chandler/Documents/Projects/timetrack/client/src/components/ErrorSnackbar.js",[],"/Users/chandler/Documents/Projects/timetrack/client/src/components/TimeEditor.js",[],"/Users/chandler/Documents/Projects/timetrack/client/src/components/ManagerComponent.js",[],"/Users/chandler/Documents/Projects/timetrack/client/src/pages/ReportManager.js",["51","52"],"import React, { Component, Fragment } from \"react\";\nimport { withRouter, Redirect, Route, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport {\n  Chip,\n  Fab,\n  IconButton,\n  Paper,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport {\n  Delete as DeleteIcon,\n  GetApp as DownloadIcon,\n  Edit as EditIcon,\n  Add as AddIcon,\n} from \"@material-ui/icons\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nimport { find } from \"lodash\";\nimport { Fetch } from \"../components/ManagerComponent\";\nimport ErrorSnackbar from \"../components/ErrorSnackbar\";\nimport ReportCreator from \"../components/ReportCreator\";\n\nconst styles = (theme) => ({\n  posts: {\n    marginTop: theme.spacing(2),\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    [theme.breakpoints.down(\"xs\")]: {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  },\n});\n\nconst REPORT_COL_SORT = [\n  {\n    field: \"startDate\",\n    sort: \"desc\",\n  },\n];\n\nclass ReportManager extends Component {\n  reportColumns = [\n    { field: \"id\", headerName: \"Report #\", width: 100 },\n    { field: \"startDate\", headerName: \"Start Date\", width: 125 },\n    { field: \"endDate\", headerName: \"End Date\", width: 120 },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 150,\n      sortable: false,\n      renderCell: (params) => {\n        switch (params.row.status) {\n          case \"IN_PROGRESS\":\n            return <Chip label=\"In Progress\" size=\"small\" color=\"secondary\" />;\n          case \"COMPLETED\":\n            return <Chip label=\"Completed\" size=\"small\" color=\"primary\" />;\n          default:\n            return <Chip label={params.row.status} size=\"small\" />;\n        }\n      },\n    },\n    {\n      field: \"edit\",\n      headerName: \"Actions\",\n      sortable: false,\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <>\n            <IconButton\n              component={Link}\n              to={`/report/${params.row.id}`}\n              color=\"inherit\"\n            >\n              <EditIcon />\n            </IconButton>\n            <IconButton\n              onClick={() => {\n                if (params.row.status === \"COMPLETED\") {\n                  // terminal state! no deletes\n                  this.setState({\n                    error: { message: \"Cannot delete a completed report.\" },\n                  });\n                } else {\n                  this.deleteReport(params.row);\n                }\n              }}\n              color=\"inherit\"\n            >\n              <DeleteIcon />\n            </IconButton>\n\n            <IconButton\n              onClick={() => {\n                if (params.row.generatedFile) {\n                  window.location.href = params.row.generatedFile;\n                } else {\n                  this.setState({\n                    error: {\n                      message:\n                        \"Report not available for download. You must complete the report first.\",\n                    },\n                  });\n                }\n              }}\n              color={params.row.generatedFile ? \"primary\" : \"secondary\"}\n            >\n              <DownloadIcon />\n            </IconButton>\n          </>\n        );\n      },\n    },\n  ];\n\n  state = {\n    loading: true,\n    reports: [],\n    error: null,\n  };\n\n  componentDidMount() {\n    this.getReports();\n  }\n\n  async getReports() {\n    await Fetch(\"get\", \"/report\")\n      .then((reports) => {\n        this.setState({\n          loading: false,\n          reports: reports,\n        });\n      })\n      .catch((err) => this.setState({ error: err }));\n  }\n\n  saveReport = async (report) => {\n    if (report.id) {\n      await Fetch(\"put\", `/report/${report.id}`, report).catch((err) =>\n        this.setState({ error: err })\n      );\n    }\n\n    // let response;\n    // if (report.id) {\n    //   // response = await Fetch(\"put\", `/report/${report.id}`, report);\n    // } else {\n    //   console.log(\"saveReport() called for new report\")\n    //   //response = await Fetch(\"post\", \"/report\", report);\n    // }\n\n    // if (response[1]) {\n    //   this.setState({ error: response[1] });\n    // }\n\n    this.props.history.goBack();\n    this.getReports();\n  };\n\n  deleteReport = async (report) => {\n    if (\n      window.confirm(`Are you sure you want to delete report \"${report.id}\"`)\n    ) {\n      await Fetch(\"delete\", `/report/${report.id}`)\n        .then(() => this.getReports())\n        .catch((err) => this.setState({ error: err }));\n    }\n  };\n\n  renderReportEditor = ({\n    match: {\n      params: { id },\n    },\n  }) => {\n    if (this.state.loading) return null;\n\n    if (id === \"new\") {\n      const report = Object.assign({}); // todo defaults\n      return <ReportCreator report={report} onSave={this.saveReport} />;\n    }\n\n    // let report = find(this.state.reports, { id: Number(id) });\n    // if (!report && id !== \"new\") return <Redirect to=\"/report\" />;\n    // return <ReportEditor report={report} onSave={this.saveReport} />;\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Fragment>\n        <Typography variant=\"h4\">Report Manager</Typography>\n        {this.state.reports.length > 0 ? (\n          <Paper elevation={1} className={classes.reports}>\n            <div style={{ display: \"flex\", height: \"100% \" }}>\n              <div style={{ flexGrow: 1 }}>\n                <DataGrid\n                  autoHeight\n                  rowsPerPageOptions={[10, 25, 50, 100]}\n                  pageSize={25}\n                  showToolbar\n                  density=\"compact\"\n                  sortModel={REPORT_COL_SORT}\n                  rows={this.state.reports}\n                  columns={this.reportColumns}\n                  checkboxSelection\n                />\n              </div>\n            </div>\n          </Paper>\n        ) : (\n          !this.state.loading && (\n            <Typography variant=\"subtitle1\">No reports to display</Typography>\n          )\n        )}\n\n        <Fab\n          color=\"secondary\"\n          aria-label=\"add report\"\n          className={classes.fab}\n          component={Link}\n          to=\"/report/new\"\n        >\n          <AddIcon />\n        </Fab>\n        <Route exact path=\"/report/:id\" render={this.renderReportEditor} />\n        {this.state.error && (\n          <ErrorSnackbar\n            onClose={() => this.setState({ error: null })}\n            message={this.state.error.message}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default compose(withRouter, withStyles(styles))(ReportManager);\n","/Users/chandler/Documents/Projects/timetrack/client/src/components/ReportCreator.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":161,"column":7,"nodeType":"59","messageId":"60","endLine":161,"endColumn":15},{"ruleId":"57","severity":1,"message":"61","line":2,"column":22,"nodeType":"59","messageId":"60","endLine":2,"endColumn":30},{"ruleId":"57","severity":1,"message":"62","line":20,"column":10,"nodeType":"59","messageId":"60","endLine":20,"endColumn":14},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'find' is defined but never used.","no-global-assign","no-unsafe-negation"]